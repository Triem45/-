# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'VideoLoginWnd.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from GlobalVariable import global_obj
from GenUsers import total_size
import GlobalVariable
from Main import SetWndIcon
class Ui_VideoLoginWnd(object):
    def setupUi(self, VideoLoginWnd):
        VideoLoginWnd.setObjectName("VideoLoginWnd")
        VideoLoginWnd.resize(881, 701)
        SetWndIcon(VideoLoginWnd) 
        self.label = QtWidgets.QLabel(VideoLoginWnd)
        self.label.setGeometry(QtCore.QRect(30, 50, 221, 31))
        font = QtGui.QFont()
        font.setFamily("隶书")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.textEdit = QtWidgets.QTextEdit(VideoLoginWnd)
        self.textEdit.setGeometry(QtCore.QRect(270, 40, 221, 41))
        self.textEdit.setObjectName("textEdit")
        self.Query = QtWidgets.QPushButton(VideoLoginWnd)
        self.Query.setGeometry(QtCore.QRect(520, 40, 131, 41))
        font = QtGui.QFont()
        font.setFamily("隶书")
        font.setPointSize(22)
        self.Query.setFont(font)
        self.Query.setObjectName("Query")
        self.listView = QtWidgets.QListWidget(VideoLoginWnd)
        self.listView.setGeometry(QtCore.QRect(30, 140, 401, 541))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(14)
        self.listView.setFont(font)
        self.listView.setObjectName("listView")
        self.listView_2 = QtWidgets.QListWidget(VideoLoginWnd)
        self.listView_2.setGeometry(QtCore.QRect(450, 140, 401, 541))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(14)
        self.listView_2.setFont(font)
        self.listView_2.setObjectName("listView_2")
        self.label_2 = QtWidgets.QLabel(VideoLoginWnd)
        self.label_2.setGeometry(QtCore.QRect(120, 100, 191, 31))
        font = QtGui.QFont()
        font.setFamily("隶书")
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(VideoLoginWnd)
        self.label_3.setGeometry(QtCore.QRect(580, 100, 161, 31))
        font = QtGui.QFont()
        font.setFamily("隶书")
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.Query_2 = QtWidgets.QPushButton(VideoLoginWnd)
        self.Query_2.setGeometry(QtCore.QRect(670, 40, 171, 41))
        font = QtGui.QFont()
        font.setFamily("隶书")
        font.setPointSize(22)
        self.Query_2.setFont(font)
        self.Query_2.setObjectName("Query_2")

        self.label_bg = QtWidgets.QLabel(VideoLoginWnd)
        self.label_bg.setGeometry(QtCore.QRect(0, 0, VideoLoginWnd.width(), VideoLoginWnd.height()))  # 设置背景图片大小为窗口大小
        self.label_bg.setPixmap(QtGui.QPixmap(r'C:\Users\27879\Desktop\SVRemmendation\xuexiao.jpg').scaled(VideoLoginWnd.width(), VideoLoginWnd.height()))  # 使用scaled方法将图片缩放到窗口大小
        opacity_effect = QtWidgets.QGraphicsOpacityEffect()
        opacity_effect.setOpacity(0.5)  # 设置透明度，值范围为0（完全透明）到1（完全不透明）
        self.label_bg.setGraphicsEffect(opacity_effect)

        self.label_bg.setAlignment(QtCore.Qt.AlignCenter)  # 设置对齐方式为居中
        self.label_bg.setObjectName("label_bg")
        # 将背景图片放置在窗口中心，不需要再手动计算位置
        self.label_bg.move(0, 0)

        # 将背景图片置于底层
        self.label_bg.lower()



        self.retranslateUi(VideoLoginWnd)
        self.Query.clicked.connect(self.query) # type: ignore
        self.Query_2.clicked.connect(self.set_hot)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(VideoLoginWnd)

    def retranslateUi(self, VideoLoginWnd):
        _translate = QtCore.QCoreApplication.translate
        VideoLoginWnd.setWindowTitle(_translate("VideoLoginWnd", "视频查询"))
        self.label.setText(_translate("VideoLoginWnd", "请输入视频 uid:"))
        self.Query.setText(_translate("VideoLoginWnd", "查询"))
        self.label_2.setText(_translate("VideoLoginWnd", "视频统计信息"))
        self.label_3.setText(_translate("VideoLoginWnd", "已观看用户"))
        self.Query_2.setText(_translate("VideoLoginWnd", "设为热点"))

    def set_hot(self):
        uid = int(self.textEdit.toPlainText())
        if uid > total_size: ##输入的id超范围 重新输入
            self.textEdit.clear()
            return

        self.textEdit.clear()
        for item in global_obj.GlobalVideoList:
            if item.uid == uid:
                GlobalVariable.GlobalVariable.set_video_hot(item)
                break
        self.textEdit.clear()

    def query(self):
        self.listView_2.clear()
        self.listView.clear()

        uid = int(self.textEdit.toPlainText())
        if uid > total_size: ##输入的id超范围 重新输入
            self.textEdit.clear()
            return

        self.textEdit.clear()
        for item in global_obj.GlobalVideoList:
            if item.uid == uid:
                index = global_obj.GlobalVideoList.index(item)
                category = global_obj.GlobalVideoList[index].category
                length = global_obj.GlobalVideoList[index].length
                name = global_obj.GlobalVideoList[index].name
                watch = global_obj.GlobalVideoList[index].watch
                hot = global_obj.GlobalVideoList[index].hot
                like = global_obj.GlobalVideoList[index].like
                comment = global_obj.GlobalVideoList[index].comment
                share = global_obj.GlobalVideoList[index].share
                user_list = global_obj.GlobalVideoList[index].user_list
                break

        self.listView.addItem('分类 '+str(category))
        self.listView.addItem('视频名称 ' + str(name))
        self.listView.addItem('长度 ' + str(length))
        self.listView.addItem('是否为热点视频 ' + str('是' if hot else '否'))
        self.listView.addItem('点赞人数 ' + str(like))
        self.listView.addItem('评论数 ' + str(comment))
        self.listView.addItem('分享数 ' + str(share))
        self.listView_2.addItem('用户列表')
        for user in user_list:
            self.listView_2.addItem(''+str(user)+' ')

if __name__ == '__main__':
    import sys
    from PyQt5.QtWidgets import QApplication, QMainWindow
    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_VideoLoginWnd()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())